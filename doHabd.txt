vsim work.instructionqueue
# vsim work.instructionqueue 
# Start time: 19:18:42 on Apr 27,2019
# Loading std.standard
# Loading std.textio(body)
# Loading ieee.std_logic_1164(body)
# Loading ieee.std_logic_arith(body)
# Loading ieee.std_logic_unsigned(body)
# Loading ieee.numeric_std(body)
# Loading work.instructionqueue(rtl)
add wave -position end  sim:/instructionqueue/length
add wave -position end  sim:/instructionqueue/width
add wave -position end  sim:/instructionqueue/widthByTwo
add wave -position end  sim:/instructionqueue/input
add wave -position end  sim:/instructionqueue/enable
add wave -position end  sim:/instructionqueue/reset
add wave -position end  sim:/instructionqueue/clk
add wave -position end  sim:/instructionqueue/queueFull
add wave -position end  sim:/instructionqueue/output
add wave -position end  sim:/instructionqueue/q
add wave -position end  sim:/instructionqueue/tail
add wave -position end  sim:/instructionqueue/queueFullSignal

force -freeze sim:/instructionqueue/clk 0 0, 1 {50 ps} -r 100
force -freeze sim:/instructionqueue/clk 0 0, 1 {50 ps} -r 100
force -freeze sim:/instructionqueue/input 11110000111100001111000011110000 0

force -freeze sim:/instructionqueue/input 11111111111111111111111111111111 0

1111111111111111





vsim work.cpu
# vsim work.cpu 
# Start time: 20:05:25 on Apr 27,2019
# Loading std.standard
# Loading std.textio(body)
# Loading ieee.std_logic_1164(body)
# Loading ieee.std_logic_arith(body)
# Loading ieee.std_logic_unsigned(body)
# Loading ieee.numeric_std(body)
# Loading work.cpu(rtl)
# Loading work.mregister(rtl)
# Loading work.pccontroller(rtl)
# Loading work.pcincrementer(rtl)
# Loading work.instructionram(rtl)
# Loading work.instructionqueue(rtl)
add wave -position end  sim:/cpu/clk
add wave -position end  sim:/cpu/reset
add wave -position end  sim:/cpu/pcControllerOut
add wave -position end  sim:/cpu/pcEnable
add wave -position end  sim:/cpu/pcOut
add wave -position end  sim:/cpu/ROBnewPC
add wave -position end  sim:/cpu/ROBwritePC
add wave -position end  sim:/cpu/queueFull
add wave -position end  sim:/cpu/memRead
add wave -position end  sim:/cpu/ROBEnableQueue
add wave -position end  sim:/cpu/instQueueOut
add wave -position end  sim:/cpu/ramOut
force -freeze sim:/cpu/clk 0 0, 1 {50 ps} -r 100
mem load -filltype value -filldata {0000000000000000 1111111111111111} -fillradix symbolic /cpu/insRam/ram(0)
mem load -filltype value -filldata 1111111111111111 -fillradix symbolic /cpu/insRam/ram(0)
mem load -filltype value -filldata 1111111111111111 -fillradix symbolic /cpu/insRam/ram(1)
mem load -filltype value -filldata 1111111110111111 -fillradix symbolic /cpu/insRam/ram(2)
mem load -filltype value -filldata {1111111001111111 } -fillradix symbolic /cpu/insRam/ram(3)
mem load -filltype value -filldata 1111111111111111 -fillradix symbolic /cpu/insRam/ram(4)
mem load -filltype value -filldata 1111111111111111 -fillradix symbolic /cpu/insRam/ram(5)
force -freeze sim:/cpu/reset 1 0
force -freeze sim:/cpu/clk 0 0, 1 {50 ps} -r 100
run
force -freeze sim:/cpu/reset 0 0